name: Mirror

on:
  push:
    branches:
      - master

jobs:
  build-on-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install sfml prerequisites on Ubuntu
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            git \
            cmake \
            libasound2-dev \
            mesa-common-dev \
            libx11-dev \
            libxrandr-dev \
            libxi-dev \
            xorg-dev \
            libgl1-mesa-dev \
            libglu1-mesa-dev \
            libxext-dev \
            libxrender-dev \
            libxtst-dev \
            libxt-dev \
            libudev-dev \
            libfreetype6-dev \
            libopenal-dev \
            libvorbis-dev \
            libflac-dev --fix-missing

      - name: Build rtype binaries on Ubuntu (desktop)
        run: |
          cmake -B ${{github.workspace}}/build/ -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release
          cmake --build ${{github.workspace}}/build/ -j

      - name: Check Ubuntu build (desktop)
        run: |
          test -f r-type_client
          test -f r-type_server

  build-on-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1

      - name: Install vcpkg
        uses: friendlyanon/setup-vcpkg@v1
        with: { committish: "${{ env.VCPKG_COMMIT }}" }

      - name: Install sfml
        run: C:\vcpkg\vcpkg.exe install --triplet x64-windows --debug

      - name: Build rtype on Windows (desktop)
        run: |
          cmake -B ${{github.workspace}}/build/ -DCMAKE_BUILD_TYPE=Debug
          cmake --build ${{github.workspace}}/build/ -j

      - name: Check Windows build (desktop)
        run: |
          Test-Path r-type_client
          Test-Path r-type_server

  mirror:
    needs:
      - build-on-ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ secrets.EPI_REPO_URL }}
          ssh_private_key: ${{ secrets.EPI_MIRRORING_KEY }}
