name: Mirror

on:
  push:
    branches:
      - master

jobs:
  build-on-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install prerequisiteries
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++ libudev-dev pip pkg-config libgl-dev
          pip install conan

      - name: Install dependencies with conan
        run: |
          mkdir build
          cd build
          conan install .. --build=missing \
          -c tools.system.package_manager:mode=install \
          -c tools.system.package_manager:sudo=True

      - name: Build rtype binaries on Ubuntu (desktop)
        run: |
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release .. -G "Unix Makefiles"
          cmake --build  . -j 3

      - name: Check Ubuntu build (desktop)
        uses: andstor/file-existence-action@v1
        with:
          files: "r_type-client, r_type-server"

  build-on-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1

      - name: Install Pip
        run: |
          @"%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command "iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))" && SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin"
          choco install -y python3
          curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
          python get-pip.py

      - name: Install conan
        run: pip install conan

      - name: Install dependencies
        run: |
          mkdir build && cd build
          conan install .. --build=missing -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True

      - name: Build rtype on Windows (desktop)
        run: |
          cd build/
          cmake .. -DCMAKE_BUILD_TYPE=Release -G 'Visual Studio 17 2022'
          cmake --build . -j 3

      - name: Check Windows build (desktop)
        uses: andstor/file-existence-action@v1
        with:
          files: "r_type-client.exe, r_type-server.exe"

  mirror:
    needs: [build-on-ubuntu, build-on-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ secrets.EPI_REPO_URL }}
          ssh_private_key: ${{ secrets.EPI_MIRRORING_KEY }}
